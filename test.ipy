import numpy as np
import npfma

def get_data(s):
    r = []
    for i in range(4):
        x = np.arange(s + 2.)
        if x.__array_interface__['data'][0] % 32 != 0:
            r.append(x[2:] - 2.)
        else:
            r.append(x[:-2])
    return r


#npfma.set_type("libc")
npfma.set_type("sse2")
#npfma.set_type("avx")
#npfma.set_type("fma3")
#npfma.set_type("fma4")


a, b, c, o = get_data(5000000)
%timeit npfma.fma(a, b, c, out=o)

def pure_numpy_fma(a,b,c, out):
    out[:] = a * b + c

%timeit pure_numpy_fma(a, b, c, o)

def pure_numpy_fma2(a,b,c,out):
    np.multiply(a,b, out=out)
    out += c

%timeit pure_numpy_fma2(a, b, c, o)
